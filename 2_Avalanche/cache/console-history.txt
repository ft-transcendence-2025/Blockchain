await owner.sendTransaction({ to: "0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05", value: ethers.parseEther("0.1") });
ethers.getSigners();
const [owner,  feeCollector, operator] = await 
const myContract = await ethers.getContractAt("CounterTest","0x52C84043CD9c865236f11d9Fc9F56aa003c1f922")
await myContract.getMatchCount()
);
  1625003600  // endTime (timestamp)
  1625000000, // startTime (timestamp)
  123,        // winner (player1)
  2,          // score2
  3,          // score1
  456,        // player2
  123,        // player1
  101,        // matchId
  1,          // tournamentId
await myContract.newMatch(
const myContract = await ethers.getContractAt("SimpleStorage","0x52C84043CD9c865236f11d9Fc9F56aa003c1f922")
);
  1625003600  // endTime (timestamp)
  1625000000, // startTime (timestamp)
  123,        // winner (player1)
  2,          // score2
  3,          // score1
  456,        // player2
  123,        // player1
  101,        // matchId
  1,          // tournamentId
await myContract.newMatch(
  1625003600  // endTime (timestamp)
  1625000000, // startTime (timestamp)
  123,        // winner (player1)
  2,          // score2
  3,          // score1
  456,        // player2
  123,        // player1
  101,        // matchId
  1,          // tournamentId
await SimpleStorage.newMatch(
  1625003600  // endTime (timestamp)
  1625000000, // startTime (timestamp)
  123,        // winner (player1)
  2,          // score2
  3,          // score1
  456,        // player2
  123,        // player1
  101,        // matchId
  1,          // tournamentId
await SimpleStorage.newMatch(
await myContract.getMatchCount()
const myContract = await ethers.getContractAt("SimpleStorage","0x52C84043CD9c865236f11d9Fc9F56aa003c1f922")
console.log(result)
const result = await myNewContract.getMatch(0);
clear
await myNewContract.getMatchCount()
myNewContract.getMatchCount()
);
1625003600
1625000000,
123,
2,
3,
345,
123,
101,
1,
await myNewContract.newMatch(
);
1625003600
1625000000,
123,
2,
3,
345,
123,
101,
1,
await SimpleStorage.newMatch(
await myNewContract.getMatchCount()
myNewContract.getMatchCount()
const myNewContract = await ethers.getContractAt("SimpleStorage","0x17aB05351fC94a1a67Bf3f56DdbB941aE6c63E25")
myContract.getMatchCount()
const myContract = await ethers.getContractAt("SimpleStorage","0x52C84043CD9c865236f11d9Fc9F56aa003c1f922")
await myContract.getCount()
const myContract = await ethers.getContractAt("CounterTest","0x52C84043CD9c865236f11d9Fc9F56aa003c1f922")
await myContract.getCount()
}' 
	"params":["0x8db97C7cEcE249c2b98bDC0226Cc4C2A57BF52FC", "latest"]  
	"method":"eth_getBalance",      
	"id":1,      
	"jsonrpc":"2.0",      
curl -X POST --data '{      
await myContract.getCount()
await owner.sendTransaction({ to: "0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05", value: ethers.parseEther("150") });
await owner.sendTransaction({ to: "0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05", value: ethers.parseEther("0.1") });
ethers.getSigners();
const [owner,  feeCollector, operator] = await 
await myContract.getCount()
await myContract.incrementCount()
await myContract.getCount()
await myContract.incrementCount()
await ethers.formatEther(balance)
const balance = await provider.getBalance(signer.address);
await console.log("Connected as:", signer.address);
console.log("Connected as:", signer.address);
const [signer] = await ethers.getSigners();
(await provider.getNetwork()).chainId
const provider = ethers.provider;
await myContract.getCount()
await myContract.incrementCount()
await myContract.getCount()
const myContract = await ethers.getContractAt("CounterTest","0x52C84043CD9c865236f11d9Fc9F56aa003c1f922")
exit
await myContract.getCount()
await myContract.incrementCount()
await myContract.getCount()
const myContract = await ethers.getContractAt("CounterTest","0x5fbdb2315678afecb367f032d93f642f64180aa3")
await owner.sendTransaction({ to: "0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05", value: ethers.parseEther("0.1") });
ethers.getSigners();
const [owner,  feeCollector, operator] = await 
await myContract.incrementCount()
await myContract.getCount()
const myContract = await ethers.getContractAt("CounterTest","0x5fbdb2315678afecb367f032d93f642f64180aa3")
await myContract.getCount()
const myContract = await ethers.getContractAt("CounterTest","0x5fbdb2315678afecb367f032d93f642f64180aa3")
await myContract.getCount()
await owner.sendTransaction({ to: "0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05", value: ethers.parseEther("0.1") });
ethers.getSigners();
const [owner,  feeCollector, operator] = await 
await myContract.getCount()
await owner.sendTransaction({ to: "0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05", value: ethers.parseEther("0.1") });
ethers.getSigners();
const [owner,  feeCollector, operator] = await 
await owner.sendTransaction({ to: "0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05", value: ethers.parseEther("0.1") });
ethers.getSigners();
const [owner,  feeCollector, operator] = await 
await owner.sendTransaction({ to: "0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05", value: ethers.parseEther("0.1") });
ethers.getSigners();
const [owner,  feeCollector, operator] = await 
const myContract = await ethers.getContractAt("CounterTest","0x5fbdb2315678afecb367f032d93f642f64180aa3")
ls
const [owner,  feeCollector, operator] = await ethers.getSigners();await owner.sendTransaction({ to: "0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05", value: ethers.parseEther("0.1") });
await owner.sendTransaction({ to: 0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05, value: ethers.parseEther("0.1") });
await  myContract.getCount()
await myContract.incrementCount()
myContract.incrementCount()
await  myContract.getCount()
const myContract = await ethers.getContractAt("CounterTest","0x5fbdb2315678afecb367f032d93f642f64180aa3")
await myContract.incrementCount();
const myContract = await ethers.getContractAt("CounterTest","0x5fbdb2315678afecb367f032d93f642f64180aa3")
console.log(typeof window.ethereum);
const balance = await ethers.provider.getBalance(metamaskAddress);
// Check balance
const metamaskAddress = "0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05";
// Replace with your MetaMask address
console.log("MetaMask balance:", ethers.formatEther(balance), "ETH");
const balance = await ethers.provider.getBalance(metamaskAddress);
// Check balance
const metamaskAddress = "0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05";
// Replace with your MetaMask address
console.log(await ethers.provider.getBalance("0x8626f6940e2eb28930efb4cef49b2d1f2c9c1199"));
const balance = await ethers.provider.getBalance(0x8626f6940e2eb28930efb4cef49b2d1f2c9c1199);
const balance = await ethers.provider.getBalance("0x8626f6940e2eb28930efb4cef49b2d1f2c9c1199");
console.log(signers[19]);
console.log(signers[19].address);
console.log(signers[0].address);
}
console.log(`Balance: ${ethers.formatEther(balance)} ETH\n`);
console.log(`Signer ${i}: ${address}`);
const balance = await ethers.provider.getBalance(address);
for (let i = 0; i < signers.length; i++) { const address = signers[i].address;
clear
signers
const signers = await ethers.getSigners();
});
  value: ethers.parseEther("0.1") 
  to: "0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05", 
await owner.sendTransaction({ 
await ethers.getSigners()
clear
  value: ethers.parseEther("0.1") 
  to: "0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05", 
await owner.sendTransaction({ 
});
  value: ethers.parseEther("0.1") 
  to: "0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05", 
await owner.sendTransaction({ 
clear
await owner.sendTransaction({ to: 0xe78d32C27B54d317dD5b8ACE674d3c8B6D7B7a05, value: ethers.parseEther("0.1") });
const [owner, feeCollector, operator] = await ethers.getsigners();
const [owner, feeCollector, operator] = await
await owner.sendTransaction({ to: "PasteYourMetamaskAddressHere", value: ethers.parseEther("0.1") });
ethers.getSigners();
const [owner,  feeCollector, operator] = await 
await myContract.getCount()
await myContract.incrementCount()
await myContract.getCount()
await provider.getBlock("latest")
await myContract.incrementCount()
await provider.getBlock("latest")
await myContract.incrementCount()
promise
const promise = myContract.getCount()
Promise
promise
myContract.getCount()
await myContract.getCount()
await provider.getBlock("latest")
provider = ethers.provider
await provider.getBlock("latest")<
provider = ethers.provider
await myContract.owner()
myContract.target
const myContract = await ethers.getContractAt("CounterTest","0x5fbdb2315678afecb367f032d93f642f64180aa3")